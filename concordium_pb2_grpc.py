# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import concordium_pb2 as concordium__pb2


class P2PStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.PeerConnect = channel.unary_unary(
        '/P2P/PeerConnect',
        request_serializer=concordium__pb2.PeerConnectRequest.SerializeToString,
        response_deserializer=concordium__pb2.SuccessResponse.FromString,
        )
    self.PeerUptime = channel.unary_unary(
        '/P2P/PeerUptime',
        request_serializer=concordium__pb2.Empty.SerializeToString,
        response_deserializer=concordium__pb2.NumberResponse.FromString,
        )
    self.PeerTotalSent = channel.unary_unary(
        '/P2P/PeerTotalSent',
        request_serializer=concordium__pb2.Empty.SerializeToString,
        response_deserializer=concordium__pb2.NumberResponse.FromString,
        )
    self.PeerTotalReceived = channel.unary_unary(
        '/P2P/PeerTotalReceived',
        request_serializer=concordium__pb2.Empty.SerializeToString,
        response_deserializer=concordium__pb2.NumberResponse.FromString,
        )
    self.PeerVersion = channel.unary_unary(
        '/P2P/PeerVersion',
        request_serializer=concordium__pb2.Empty.SerializeToString,
        response_deserializer=concordium__pb2.StringResponse.FromString,
        )
    self.SendMessage = channel.unary_unary(
        '/P2P/SendMessage',
        request_serializer=concordium__pb2.SendMessageRequest.SerializeToString,
        response_deserializer=concordium__pb2.SuccessResponse.FromString,
        )
    self.PeerStats = channel.unary_unary(
        '/P2P/PeerStats',
        request_serializer=concordium__pb2.Empty.SerializeToString,
        response_deserializer=concordium__pb2.PeerStatsResponse.FromString,
        )
    self.PeerList = channel.unary_unary(
        '/P2P/PeerList',
        request_serializer=concordium__pb2.Empty.SerializeToString,
        response_deserializer=concordium__pb2.PeerListResponse.FromString,
        )
    self.SubscriptionStart = channel.unary_unary(
        '/P2P/SubscriptionStart',
        request_serializer=concordium__pb2.Empty.SerializeToString,
        response_deserializer=concordium__pb2.SuccessResponse.FromString,
        )
    self.SubscriptionStop = channel.unary_unary(
        '/P2P/SubscriptionStop',
        request_serializer=concordium__pb2.Empty.SerializeToString,
        response_deserializer=concordium__pb2.SuccessResponse.FromString,
        )
    self.SubscriptionPoll = channel.unary_unary(
        '/P2P/SubscriptionPoll',
        request_serializer=concordium__pb2.Empty.SerializeToString,
        response_deserializer=concordium__pb2.P2PNetworkMessage.FromString,
        )
    self.BanNode = channel.unary_unary(
        '/P2P/BanNode',
        request_serializer=concordium__pb2.PeerElement.SerializeToString,
        response_deserializer=concordium__pb2.SuccessResponse.FromString,
        )
    self.UnbanNode = channel.unary_unary(
        '/P2P/UnbanNode',
        request_serializer=concordium__pb2.PeerElement.SerializeToString,
        response_deserializer=concordium__pb2.SuccessResponse.FromString,
        )
    self.JoinNetwork = channel.unary_unary(
        '/P2P/JoinNetwork',
        request_serializer=concordium__pb2.NetworkChangeRequest.SerializeToString,
        response_deserializer=concordium__pb2.SuccessResponse.FromString,
        )
    self.LeaveNetwork = channel.unary_unary(
        '/P2P/LeaveNetwork',
        request_serializer=concordium__pb2.NetworkChangeRequest.SerializeToString,
        response_deserializer=concordium__pb2.SuccessResponse.FromString,
        )
    self.NodeInfo = channel.unary_unary(
        '/P2P/NodeInfo',
        request_serializer=concordium__pb2.Empty.SerializeToString,
        response_deserializer=concordium__pb2.NodeInfoResponse.FromString,
        )
    self.GetConsensusStatus = channel.unary_unary(
        '/P2P/GetConsensusStatus',
        request_serializer=concordium__pb2.Empty.SerializeToString,
        response_deserializer=concordium__pb2.SuccessfulJsonPayloadResponse.FromString,
        )
    self.GetBlockInfo = channel.unary_unary(
        '/P2P/GetBlockInfo',
        request_serializer=concordium__pb2.BlockHash.SerializeToString,
        response_deserializer=concordium__pb2.SuccessfulJsonPayloadResponse.FromString,
        )
    self.GetAncestors = channel.unary_unary(
        '/P2P/GetAncestors',
        request_serializer=concordium__pb2.BlockHashAndAmount.SerializeToString,
        response_deserializer=concordium__pb2.SuccessfulJsonPayloadResponse.FromString,
        )
    self.GetBranches = channel.unary_unary(
        '/P2P/GetBranches',
        request_serializer=concordium__pb2.Empty.SerializeToString,
        response_deserializer=concordium__pb2.SuccessfulJsonPayloadResponse.FromString,
        )
    self.SendTransaction = channel.unary_unary(
        '/P2P/SendTransaction',
        request_serializer=concordium__pb2.SendTransactionRequest.SerializeToString,
        response_deserializer=concordium__pb2.SuccessResponse.FromString,
        )
    self.GetLastFinalAccountList = channel.unary_unary(
        '/P2P/GetLastFinalAccountList',
        request_serializer=concordium__pb2.Empty.SerializeToString,
        response_deserializer=concordium__pb2.SuccessfulBytePayloadResponse.FromString,
        )
    self.GetLastFinalInstances = channel.unary_unary(
        '/P2P/GetLastFinalInstances',
        request_serializer=concordium__pb2.Empty.SerializeToString,
        response_deserializer=concordium__pb2.SuccessfulBytePayloadResponse.FromString,
        )
    self.GetLastFinalAccountInfo = channel.unary_unary(
        '/P2P/GetLastFinalAccountInfo',
        request_serializer=concordium__pb2.AccountAddress.SerializeToString,
        response_deserializer=concordium__pb2.SuccessfulBytePayloadResponse.FromString,
        )
    self.GetLastFinalInstanceInfo = channel.unary_unary(
        '/P2P/GetLastFinalInstanceInfo',
        request_serializer=concordium__pb2.ContractInstanceAddress.SerializeToString,
        response_deserializer=concordium__pb2.SuccessfulBytePayloadResponse.FromString,
        )
    self.GetBannedPeers = channel.unary_unary(
        '/P2P/GetBannedPeers',
        request_serializer=concordium__pb2.Empty.SerializeToString,
        response_deserializer=concordium__pb2.PeerListResponse.FromString,
        )
    self.Shutdown = channel.unary_unary(
        '/P2P/Shutdown',
        request_serializer=concordium__pb2.Empty.SerializeToString,
        response_deserializer=concordium__pb2.SuccessResponse.FromString,
        )


class P2PServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def PeerConnect(self, request, context):
    """Suggest this peer connects to submitted peer details
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PeerUptime(self, request, context):
    """Peer uptime in milliseconds
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PeerTotalSent(self, request, context):
    """Peer total number of sent packets
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PeerTotalReceived(self, request, context):
    """Peer total number of received packets
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PeerVersion(self, request, context):
    """Peer client software version
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendMessage(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PeerStats(self, request, context):
    """Stats for connected peers
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PeerList(self, request, context):
    """List of connected peers
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubscriptionStart(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubscriptionStop(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubscriptionPoll(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def BanNode(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UnbanNode(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def JoinNetwork(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LeaveNetwork(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def NodeInfo(self, request, context):
    """Get information about the running Node
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetConsensusStatus(self, request, context):
    """see https://gitlab.com/Concordium/notes-wiki/wikis/Consensus-queries#getconsensusstatus
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetBlockInfo(self, request, context):
    """see https://gitlab.com/Concordium/notes-wiki/wikis/Consensus-queries#getblockinfo
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAncestors(self, request, context):
    """see https://gitlab.com/Concordium/notes-wiki/wikis/Consensus-queries#getancestors
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetBranches(self, request, context):
    """see https://gitlab.com/Concordium/notes-wiki/wikis/Consensus-queries#getbranches
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendTransaction(self, request, context):
    """Submit a local transaction
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetLastFinalAccountList(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetLastFinalInstances(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetLastFinalAccountInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetLastFinalInstanceInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetBannedPeers(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Shutdown(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_P2PServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'PeerConnect': grpc.unary_unary_rpc_method_handler(
          servicer.PeerConnect,
          request_deserializer=concordium__pb2.PeerConnectRequest.FromString,
          response_serializer=concordium__pb2.SuccessResponse.SerializeToString,
      ),
      'PeerUptime': grpc.unary_unary_rpc_method_handler(
          servicer.PeerUptime,
          request_deserializer=concordium__pb2.Empty.FromString,
          response_serializer=concordium__pb2.NumberResponse.SerializeToString,
      ),
      'PeerTotalSent': grpc.unary_unary_rpc_method_handler(
          servicer.PeerTotalSent,
          request_deserializer=concordium__pb2.Empty.FromString,
          response_serializer=concordium__pb2.NumberResponse.SerializeToString,
      ),
      'PeerTotalReceived': grpc.unary_unary_rpc_method_handler(
          servicer.PeerTotalReceived,
          request_deserializer=concordium__pb2.Empty.FromString,
          response_serializer=concordium__pb2.NumberResponse.SerializeToString,
      ),
      'PeerVersion': grpc.unary_unary_rpc_method_handler(
          servicer.PeerVersion,
          request_deserializer=concordium__pb2.Empty.FromString,
          response_serializer=concordium__pb2.StringResponse.SerializeToString,
      ),
      'SendMessage': grpc.unary_unary_rpc_method_handler(
          servicer.SendMessage,
          request_deserializer=concordium__pb2.SendMessageRequest.FromString,
          response_serializer=concordium__pb2.SuccessResponse.SerializeToString,
      ),
      'PeerStats': grpc.unary_unary_rpc_method_handler(
          servicer.PeerStats,
          request_deserializer=concordium__pb2.Empty.FromString,
          response_serializer=concordium__pb2.PeerStatsResponse.SerializeToString,
      ),
      'PeerList': grpc.unary_unary_rpc_method_handler(
          servicer.PeerList,
          request_deserializer=concordium__pb2.Empty.FromString,
          response_serializer=concordium__pb2.PeerListResponse.SerializeToString,
      ),
      'SubscriptionStart': grpc.unary_unary_rpc_method_handler(
          servicer.SubscriptionStart,
          request_deserializer=concordium__pb2.Empty.FromString,
          response_serializer=concordium__pb2.SuccessResponse.SerializeToString,
      ),
      'SubscriptionStop': grpc.unary_unary_rpc_method_handler(
          servicer.SubscriptionStop,
          request_deserializer=concordium__pb2.Empty.FromString,
          response_serializer=concordium__pb2.SuccessResponse.SerializeToString,
      ),
      'SubscriptionPoll': grpc.unary_unary_rpc_method_handler(
          servicer.SubscriptionPoll,
          request_deserializer=concordium__pb2.Empty.FromString,
          response_serializer=concordium__pb2.P2PNetworkMessage.SerializeToString,
      ),
      'BanNode': grpc.unary_unary_rpc_method_handler(
          servicer.BanNode,
          request_deserializer=concordium__pb2.PeerElement.FromString,
          response_serializer=concordium__pb2.SuccessResponse.SerializeToString,
      ),
      'UnbanNode': grpc.unary_unary_rpc_method_handler(
          servicer.UnbanNode,
          request_deserializer=concordium__pb2.PeerElement.FromString,
          response_serializer=concordium__pb2.SuccessResponse.SerializeToString,
      ),
      'JoinNetwork': grpc.unary_unary_rpc_method_handler(
          servicer.JoinNetwork,
          request_deserializer=concordium__pb2.NetworkChangeRequest.FromString,
          response_serializer=concordium__pb2.SuccessResponse.SerializeToString,
      ),
      'LeaveNetwork': grpc.unary_unary_rpc_method_handler(
          servicer.LeaveNetwork,
          request_deserializer=concordium__pb2.NetworkChangeRequest.FromString,
          response_serializer=concordium__pb2.SuccessResponse.SerializeToString,
      ),
      'NodeInfo': grpc.unary_unary_rpc_method_handler(
          servicer.NodeInfo,
          request_deserializer=concordium__pb2.Empty.FromString,
          response_serializer=concordium__pb2.NodeInfoResponse.SerializeToString,
      ),
      'GetConsensusStatus': grpc.unary_unary_rpc_method_handler(
          servicer.GetConsensusStatus,
          request_deserializer=concordium__pb2.Empty.FromString,
          response_serializer=concordium__pb2.SuccessfulJsonPayloadResponse.SerializeToString,
      ),
      'GetBlockInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GetBlockInfo,
          request_deserializer=concordium__pb2.BlockHash.FromString,
          response_serializer=concordium__pb2.SuccessfulJsonPayloadResponse.SerializeToString,
      ),
      'GetAncestors': grpc.unary_unary_rpc_method_handler(
          servicer.GetAncestors,
          request_deserializer=concordium__pb2.BlockHashAndAmount.FromString,
          response_serializer=concordium__pb2.SuccessfulJsonPayloadResponse.SerializeToString,
      ),
      'GetBranches': grpc.unary_unary_rpc_method_handler(
          servicer.GetBranches,
          request_deserializer=concordium__pb2.Empty.FromString,
          response_serializer=concordium__pb2.SuccessfulJsonPayloadResponse.SerializeToString,
      ),
      'SendTransaction': grpc.unary_unary_rpc_method_handler(
          servicer.SendTransaction,
          request_deserializer=concordium__pb2.SendTransactionRequest.FromString,
          response_serializer=concordium__pb2.SuccessResponse.SerializeToString,
      ),
      'GetLastFinalAccountList': grpc.unary_unary_rpc_method_handler(
          servicer.GetLastFinalAccountList,
          request_deserializer=concordium__pb2.Empty.FromString,
          response_serializer=concordium__pb2.SuccessfulBytePayloadResponse.SerializeToString,
      ),
      'GetLastFinalInstances': grpc.unary_unary_rpc_method_handler(
          servicer.GetLastFinalInstances,
          request_deserializer=concordium__pb2.Empty.FromString,
          response_serializer=concordium__pb2.SuccessfulBytePayloadResponse.SerializeToString,
      ),
      'GetLastFinalAccountInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GetLastFinalAccountInfo,
          request_deserializer=concordium__pb2.AccountAddress.FromString,
          response_serializer=concordium__pb2.SuccessfulBytePayloadResponse.SerializeToString,
      ),
      'GetLastFinalInstanceInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GetLastFinalInstanceInfo,
          request_deserializer=concordium__pb2.ContractInstanceAddress.FromString,
          response_serializer=concordium__pb2.SuccessfulBytePayloadResponse.SerializeToString,
      ),
      'GetBannedPeers': grpc.unary_unary_rpc_method_handler(
          servicer.GetBannedPeers,
          request_deserializer=concordium__pb2.Empty.FromString,
          response_serializer=concordium__pb2.PeerListResponse.SerializeToString,
      ),
      'Shutdown': grpc.unary_unary_rpc_method_handler(
          servicer.Shutdown,
          request_deserializer=concordium__pb2.Empty.FromString,
          response_serializer=concordium__pb2.SuccessResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'P2P', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
